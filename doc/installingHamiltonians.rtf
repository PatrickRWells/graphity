{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww15220\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 Writing Hamiltonians \
\

\b0\fs22 This code has been written to allow someone who wishes to provide the simulation module with a new hamiltonian to do so without editing any actual simulation code. The python code takes care of the management of all the code internally.\
\

\b\fs26 Creating and installing a new hamiltonian: \
\

\b0\fs22 1. In the \'93hamiltonian\'94 folder, create a copy of the \'93template.h\'94 header file and give it a name of your choosing.\
\
2. Change all instances of the word \'93template\'94 in the header file to the name of your file. These names are case sensitive and must match. For example, if your header file was called \'93basic.h,\'94 you would replace all instance of the word \'93template\'94 with the word \'93basic.\'94 If your header file was called \'93Basic.h\'94 then you would use \'93Basic.\'94\
\
3. Change the \'93calculate\'94 function to calculate the hamiltonian. The graph can be accessed using the \'93host\'94 attribute that is passed to the function (you will not need to do this manually) so, for example, if you wanted the degree of a particular node in the host, you would use 
\b host.getDegree(node). 
\b0 See below for currently available functions. Do not edit any of the other functions in the header file. They are used by the background code.\
\
4. Inside the calculate function, set the attribute \'91_result\'92 to the result of the computation. YOU MUST DO THIS FOR THE SIMULATION TO WORK. This attribute is a double by default.\
\
5. Once your calculate function is complete, install the hamiltonian by running the main python script and inputting the hame of the header file when prompted.\
\
6. Once your hamiltonian has been installed, it can be used by any of the simulation modules.\
\

\b\fs26 Uninstalling hamiltonians:
\b0 \

\fs22  \
Use the uninstall option in the main python script. The script does not delete the header file of the hamiltonian.\
\

\b\fs26 Some tips and warnings: \

\b0\fs22 \
Do not edit the \'93hamiltonians.txt\'94 or \'93hamiltonians.h\'94 files unless absolutely necessary. These are managed by the main python script and should not require manual modification. If you do need to edit one, be sure to edit the other to match. Each line \'93hamiltonians.txt\'94 file should have an associated include line in the \'93hamiltonians.h\'94 file.\

\b \

\b0 If you wish to use your hamiltonian in a new simulation module, you can do so using the function defined at the bottom of the header file. Please note that the python script must be modified if you want it to automatically manage a newly-written simulation module.
\b\fs36 \
\

\fs26 Currently available functions for calculations\
\

\fs22 getDegree(int node)
\b0 \
\
Returns the degree of the node specified by the argument as an integer.\
\

\b isConnected(int nodeA, int nodeB)\
\

\b0 Checks the adjacency matrix to see if nodes A and B are connected. Returns true if so, false otherwise.}